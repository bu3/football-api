import groovy.json.JsonSlurper

buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
    baseName = 'football-api'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')

    compile('io.springfox:springfox-swagger2:2.4.0')
    compile('io.springfox:springfox-swagger-ui:2.4.0')

    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.7.3')

    compile('org.codehaus.groovy:groovy-all:2.4.1')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4')
    testCompile('com.jayway.jsonpath:json-path:2.0.0')
    testRuntime('cglib:cglib-nodep:3.1')
    testRuntime('org.objenesis:objenesis:2.1')

    testCompile('info.cukes:cucumber-groovy:1.2.4')
    testCompile('info.cukes:cucumber-junit:1.2.4')
    testCompile('com.jayway.restassured:rest-assured:2.9.0')

}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

test {
    exclude '**/RunCukes.class'
    testLogging {
        events "passed", "skipped", "failed"
    }
}

/**
 * Acceptance Tests Section
 */
def checkStatus(pingUrl, timeout) {
    println "Pinging $pingUrl"

    def complete = false
    use(groovy.time.TimeCategory) {
        def end = new Date() + timeout.minutes
        while (!complete && new Date() < end) {
            try {
                project.logger.debug "Pinging $pingUrl"
                pingUrl.text
                complete = true
            } catch (IOException ignore) {
                sleep(5000)
            }
        }

        if (!complete) {
            throw new RuntimeException("Error pinging features.remote server: $pingUrl")
        }
    }
}

def serverProcess

task startServer(dependsOn: ['assemble']) << {

    Thread.sleep(10000);

    Thread.start {
        def command = "java -Xms1024M -Xmx3072M -XX:PermSize=512m -XX:MaxPermSize=1024m -Dspring.profiles.active=mock -Dserver.port=9080 -jar build/libs/${project.name}-0.0.1-SNAPSHOT.jar"
        println "Executing: ${command}"
        def process = "$command".execute();
        serverProcess = process
        process.in.eachLine { line ->
            println line
        }
    }
}

task stopServer << {
    println 'Stopping server process'
    serverProcess.destroy()
}

task testAcceptance(dependsOn: ['compileTestGroovy', 'startServer']) << {
    checkStatus "http://localhost:9080/health".toURL(), 5
    try {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = sourceSets.test.runtimeClasspath
            args = ['-f', 'html:build/reports/tests/acceptance/local/html',
                    '-f', 'json:build/reports/tests/acceptance/local/json/index.json',
                    '--glue', 'src/test/groovy/com/football/data/acceptance/steps',
                    '-s',
                    'src/test/resources/features']
            jvmArgs = ["-Dapi.server.port=9080", '-Dapi.server.context=/']
        }
    } catch (Exception e) {
        println e.message
        println 'Stopping server process'
        serverProcess.destroy()
        throw e
    }

}


testAcceptance.finalizedBy stopServer